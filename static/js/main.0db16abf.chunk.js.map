{"version":3,"sources":["Components/FavoritesMovies/FavoritesMovies.module.scss","Components/MovieList/MovieItem/MovieItem.module.scss","UI/Form/Form.module.scss","Components/SearchBar/SearchBar.module.scss","Components/MovieList/MovieList.module.scss","UI/Modal/MoreInfo/MoreInfo.module.scss","Components/UserPage/UserPage.module.scss","UI/Modal/Error/ErrorModal.module.scss","UI/Modal/Modal.module.scss","Components/LoginForm/LoginForm.module.scss","UI/Card/Card.module.scss","UI/Button/Button.module.scss","UI/Card/Card.tsx","Components/FavoritesMovies/FavoritesMovies.tsx","UI/Form/Input/InputElement.tsx","Components/SearchBar/SearchBar.tsx","UI/Button/Button.tsx","UI/Modal/MoreInfo/MoreInfo.tsx","UI/Modal/Modal.tsx","Components/MovieList/MovieItem/MovieItem.tsx","Components/MovieList/MovieList.tsx","Components/UserPage/UserPage.tsx","UI/Modal/Error/ErrorModal.tsx","UI/Form/Form.tsx","Components/LoginForm/LoginForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Card","children","onClick","className","classes","card","FavoritesMovie","loggedUsername","useState","favoriteMovie","setfavoriteMovie","useEffect","sessionStorage","length","Object","values","forEach","item","prevState","JSON","parse","favoriteMovieList","map","movie","div_header_img","li_header","li_img","src","Poster","alt","div_movie_info_mobile","h1","Title","Year","Plot","substr","imdbID","ul","Input","Init","type","onChange","placeholder","value","SeacrhBar","inputHandler","div_search","search","title","Button","text","width","height","style","btn","MoreInfoModal","movieName","movieFullPlot","movieShortPlot","movieImage","movieReleased","movieRuntime","movieGanre","movieGenre","movieWriter","movieActors","plotToggle","setPlotToggle","div_modal","div_info","modal_info_btns","Modal","id","portal","document","getElementById","ContentModal","backdrop","modal","createPortal","MovieItem","addTofavorite","movieYear","movieId","isModalOpen","setIsModalOpen","modalToggleHandler","ShortPlot","MovieMoreInfo","MoreInfo","MovieList","searchInput","setSearchInput","moviesFound","setMoviesFound","addToSessionfavoriteMovieHandler","e","stopPropagation","movieDataAsSrting","stringify","setItem","identifier","setTimeout","input","fetch","then","res","json","response","Error","console","log","prev","catch","error","clearTimeout","cssMovieFound","SearchBar","event","target","div_ul","Released","Runtime","Genre","Writer","Actors","UserPage","username","favoriteToggle","setFavoriteToggle","header","favorites","prevstate","ErrorModal","onButtonClick","content","actions","Form","buttonText","buttonType","formHeaderTxt","nameInput","setNameInput","form","h2","LoginForm","App","modelIsOpen","setModelIsOpen","isLoggenIn","setIsLoggenIn","activeUsername","setActiveUsername","user","getItem","logginChecker","toggleModelIsOpen","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0db16abf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li_header\":\"FavoritesMovies_li_header__1Aoko\",\"li_img\":\"FavoritesMovies_li_img__3NTVb\",\"div_header_img\":\"FavoritesMovies_div_header_img__L6OE1\",\"div_movie_info_mobile\":\"FavoritesMovies_div_movie_info_mobile__3RecR\",\"h1\":\"FavoritesMovies_h1__2kLuF\",\"ul\":\"FavoritesMovies_ul__pkoQa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li_header\":\"MovieItem_li_header__3Vs2l\",\"li_img\":\"MovieItem_li_img__2cLPE\",\"div_header_img\":\"MovieItem_div_header_img__1Fv75\",\"div_movie_info_mobile\":\"MovieItem_div_movie_info_mobile__35WaO\",\"h1\":\"MovieItem_h1__24iUo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex_center_column\":\"Form_flex_center_column__16aI1\",\"form\":\"Form_form__3gy71\",\"flex_center_row\":\"Form_flex_center_row__3QMXp\",\"div-form\":\"Form_div-form__3xwMP\",\"h2\":\"Form_h2__yWfY_\",\"header\":\"Form_header__1ILTV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div_search\":\"SearchBar_div_search__1IFp-\",\"search\":\"SearchBar_search__we-KH\",\"title\":\"SearchBar_title__1Iao7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div_search\":\"MovieList_div_search__268xR\",\"div_search_items_found\":\"MovieList_div_search_items_found__2_OJj\",\"ul\":\"MovieList_ul__2bGTC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div_modal\":\"MoreInfo_div_modal__1mAeW\",\"div_info\":\"MoreInfo_div_info__31e2v\",\"modal_info_btns\":\"MoreInfo_modal_info_btns__1oq7k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"UserPage_h1__3JALi\",\"header\":\"UserPage_header__3RgPC\",\"favorites\":\"UserPage_favorites__2wiPg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"ErrorModal_header__3lBK3\",\"content\":\"ErrorModal_content__pJyyr\",\"actions\":\"ErrorModal_actions__3rikq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__Rk7EV\",\"modal\":\"Modal_modal__37BO5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"LoginForm_header__24LJ9\",\"title\":\"LoginForm_title__o3b2n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2q3D_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3Z-ew\"};","import React, { ReactNode } from \"react\";\r\nimport classes from \"./Card.module.scss\";\r\n\r\ninterface CardProps {\r\n  children: ReactNode;\r\n  onClick?: (e: React.MouseEvent<HTMLElement>) => void;\r\n}\r\nconst Card: React.FC<CardProps> = ({ children, onClick }) => {\r\n  return (\r\n    <li className={classes.card} onClick={onClick}>\r\n      {children}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport Card from \"../../UI/Card/Card\";\r\nimport classes from \"./FavoritesMovies.module.scss\";\r\n\r\ntype FavoritesMovieProps = {\r\n  loggedUsername: string | null;\r\n};\r\n\r\nconst FavoritesMovie: React.FC<FavoritesMovieProps> = ({ loggedUsername }) => {\r\n  const [favoriteMovie, setfavoriteMovie] = useState<any[]>([]);\r\n\r\n  function checkFavoriteMovies() {\r\n    if (sessionStorage.length > 1) {\r\n      Object.values(sessionStorage).forEach((item) => {\r\n        if (item !== loggedUsername) {\r\n          setfavoriteMovie((prevState) => {\r\n            return [...prevState, JSON.parse(item)];\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkFavoriteMovies();\r\n  }, []);\r\n\r\n  const favoriteMovieList = favoriteMovie.map((movie) => {\r\n    return (\r\n      <Card key={movie.imdbID}>\r\n        <div className={classes.div_header_img}>\r\n          <header className={classes.li_header}>\r\n            <img\r\n              className={classes.li_img}\r\n              src={movie.Poster}\r\n              alt={\"Movie Poster\"}\r\n            />\r\n          </header>\r\n          <div className={classes.div_movie_info_mobile}>\r\n            <div>\r\n              <h1 className={classes.h1}>{movie.Title}</h1>\r\n            </div>\r\n            <div>\r\n              <h3>Movie Year: {movie.Year}</h3>\r\n            </div>\r\n            <div>\r\n              <p>{`${movie.Plot.substr(0, 200)}...`}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    );\r\n  });\r\n  return (\r\n    <Fragment>\r\n      <ul className={classes.ul}>\r\n        {(favoriteMovie.length > 0 ) ? favoriteMovieList : <Card><div>No movies found.</div></Card>}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default FavoritesMovie;\r\n","import React from \"react\";\r\n\r\ninterface inputProps {\r\n  Init?: string;\r\n  placeholder?: string;\r\n  type: \"text\" | \"number\" | \"password\";\r\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst Input: React.FC<inputProps> = ({ Init, type, onChange, placeholder }) => {\r\n  return (\r\n    <input placeholder={placeholder} type={type} onChange={onChange} value={Init} />\r\n  );\r\n};\r\nexport default Input;\r\n","import React from \"react\";\r\nimport Input from \"../../UI/Form/Input/InputElement\";\r\nimport classes from \"./SearchBar.module.scss\";\r\n\r\ninterface SeacrhBarProps {\r\n  inputHandler: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst SeacrhBar: React.FC<SeacrhBarProps> = ({ inputHandler }) => {\r\n  return (\r\n    <div className={classes.div_search}>\r\n      <div className={classes.search}>\r\n        <header>\r\n          <h4 className={classes.title}>Search Movie</h4>\r\n        </header>\r\n        <Input type={\"text\"} onChange={inputHandler} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SeacrhBar;\r\n","import React from \"react\";\r\nimport classes from \"./Button.module.scss\";\r\n\r\ninterface ButtonProps {\r\n  width?: string;\r\n  height?: string;\r\n  type?: \"submit\" | \"reset\" | \"button\";\r\n  text: string;\r\n  onClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ type, text, width, height, onClick }) => {\r\n  return (\r\n    <button style={{width: width, height: height}} type={type} className={classes.btn} onClick={onClick}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../../Button/Button\";\r\nimport classes from \"./MoreInfo.module.scss\";\r\n\r\ninterface MoreInfoModalProps {\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n  movieName: string;\r\n  movieFullPlot: string;\r\n  movieShortPlot: string;\r\n  movieImage: string;\r\n  movieId: string;\r\n  movieReleased: string;\r\n  movieRuntime: string;\r\n  movieGenre: string;\r\n  movieWriter: string;\r\n  movieActors: string;\r\n}\r\n\r\nconst MoreInfoModal: React.FC<MoreInfoModalProps> = ({\r\n  onClick,\r\n  movieName,\r\n  movieFullPlot,\r\n  movieShortPlot,\r\n  movieImage,\r\n  movieReleased,\r\n  movieRuntime,\r\n  movieGenre: movieGanre,\r\n  movieWriter,\r\n  movieActors,\r\n}) => {\r\n  const [plotToggle, setPlotToggle] = useState(false);\r\n\r\n  const togglePlotHandler = () => {\r\n    setPlotToggle((prevState) => {\r\n      return !prevState;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.div_modal}>\r\n      <header>\r\n        <img src={movieImage} alt=\"Movie Poster\" />\r\n      </header>\r\n      <div className={classes.div_info}>\r\n        <div>\r\n          <h2>\r\n            {movieName} ({movieReleased})\r\n          </h2>\r\n          <div>\r\n            <h3>Writer:</h3> {movieWriter}.\r\n          </div>\r\n          <div>\r\n            <h3>Actors:</h3> {movieActors}.\r\n          </div>\r\n          <div>\r\n            <h3>Runtime:</h3> {movieRuntime}\r\n          </div>\r\n          <div>\r\n            <h3>Ganre:</h3> {movieGanre}.\r\n          </div>\r\n        </div>\r\n        <h3>Plot:</h3>\r\n        <p>{!plotToggle ? movieShortPlot : movieFullPlot}</p>\r\n        <div className={classes.modal_info_btns}>\r\n          <Button\r\n            type={\"button\"}\r\n            text={!plotToggle ? \"Expend Plot\" : \"Shorten Plot\"}\r\n            onClick={togglePlotHandler}\r\n            width={\"100px\"}\r\n            height={\"24px\"}\r\n          ></Button>\r\n          <Button\r\n            type={\"button\"}\r\n            text={\"Close\"}\r\n            onClick={onClick}\r\n            width={\"100px\"}\r\n            height={\"24px\"}\r\n          ></Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MoreInfoModal;\r\n","import React, { Fragment } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport classes from \"./Modal.module.scss\";\r\n\r\ninterface ModalProps {\r\n  id: string;\r\n  onClick?: (e: React.MouseEvent<HTMLElement>) => void;\r\n}\r\n\r\nconst Modal: React.FC<ModalProps> = ({ id, children, onClick }) => {\r\n  let portal: Element | null = document.getElementById(id);\r\n\r\n  const ContentModal: React.ReactNode = (\r\n    <Fragment>\r\n      <div className={classes.backdrop} onClick={onClick}></div>\r\n      <div className={classes.modal}>{children}</div>\r\n    </Fragment>\r\n  );\r\n\r\n  return createPortal(ContentModal, portal!);\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../../../UI/Button/Button\";\r\nimport Card from \"../../../UI/Card/Card\";\r\nimport classes from \"./MovieItem.module.scss\";\r\nimport MoreInfo from \"../../../UI/Modal/MoreInfo/MoreInfo\";\r\nimport Modal from \"../../../UI/Modal/Modal\";\r\n\r\ninterface MovieItemProps {\r\n  addTofavorite: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n  movieName: string;\r\n  movieYear: string;\r\n  movieFullPlot: string;\r\n  movieImage: string;\r\n  movieId: string;\r\n  movieReleased: string;\r\n  movieRuntime: string;\r\n  movieGenre: string;\r\n  movieWriter: string;\r\n  movieActors: string;\r\n}\r\n\r\nconst MovieItem: React.FC<MovieItemProps> = ({\r\n  addTofavorite,\r\n  movieImage,\r\n  movieName,\r\n  movieFullPlot,\r\n  movieYear,\r\n  movieId,\r\n  movieReleased,\r\n  movieRuntime,\r\n  movieGenre,\r\n  movieWriter,\r\n  movieActors,\r\n}) => {\r\n  const [isModalOpen, setIsModalOpen] = useState<Boolean>(false);\r\n\r\n  const modalToggleHandler = () => {\r\n    setIsModalOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const ShortPlot = `${movieFullPlot.substr(0, 150)}...`;\r\n\r\n  let MovieMoreInfo = isModalOpen ? (\r\n    <Modal id={\"overlay\"} onClick={modalToggleHandler}>\r\n      <MoreInfo\r\n        onClick={modalToggleHandler}\r\n        movieName={movieName}\r\n        movieFullPlot={movieFullPlot}\r\n        movieShortPlot={ShortPlot}\r\n        movieImage={movieImage}\r\n        movieId={movieId}\r\n        movieReleased={movieReleased}\r\n        movieRuntime={movieRuntime}\r\n        movieGenre={movieGenre}\r\n        movieWriter={movieWriter}\r\n        movieActors={movieActors}\r\n      />\r\n    </Modal>\r\n  ) : null;\r\n\r\n  return (\r\n    <Card onClick={modalToggleHandler}>\r\n      <div className={classes.div_header_img}>\r\n        <header className={classes.li_header}>\r\n          <img\r\n            className={classes.li_img}\r\n            src={movieImage}\r\n            alt={\"Movie Poster\"}\r\n          />\r\n        </header>\r\n        <div className={classes.div_movie_info_mobile}>\r\n          <div>\r\n            <h1 className={classes.h1}>{movieName}</h1>\r\n          </div>\r\n          <div>\r\n            <h3>Movie Year: {movieYear}</h3>\r\n          </div>\r\n          <div>\r\n            <p>{ShortPlot}</p>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              width={\"150px\"}\r\n              type={\"button\"}\r\n              text={\"Add To Favorites\"}\r\n              onClick={addTofavorite}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {MovieMoreInfo}\r\n    </Card>\r\n  );\r\n};\r\nexport default MovieItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport classes from \"./MovieList.module.scss\";\r\nimport MovieItem from \"./MovieItem/MovieItem\";\r\n\r\ninterface MovieListProps {}\r\n\r\nconst MovieList: React.FC<MovieListProps> = () => {\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [moviesFound, setMoviesFound] = useState<any[]>([]);\r\n\r\n  const addToSessionfavoriteMovieHandler = (\r\n    e: React.MouseEvent<HTMLElement>\r\n  ) => {\r\n    e.stopPropagation();\r\n    if (moviesFound.length > 0) {\r\n      let movieDataAsSrting: string = JSON.stringify(moviesFound[0]);\r\n      sessionStorage.setItem(moviesFound[0].imdbID, movieDataAsSrting);\r\n    }\r\n  };\r\n\r\n  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchInput(event.target.value);\r\n  };\r\n\r\n  function getMoviesByInput(input: string) {\r\n    return fetch(\r\n      `http://www.omdbapi.com/?i=tt3896198&apikey=b6682813&t=${input}&plot=full`\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    const identifier = setTimeout(() => {\r\n      if (searchInput !== \"\") {\r\n        getMoviesByInput(searchInput)\r\n          .then((res) => res.json())\r\n          .then((response) => {\r\n            if (response.Error) {\r\n              console.log(response.Error);\r\n            } else {\r\n              setMoviesFound((prev) => {\r\n                return [...prev, response];\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => console.error(error));\r\n      }\r\n    }, 1000);\r\n\r\n    return () => {\r\n      setMoviesFound([]);\r\n      clearTimeout(identifier);\r\n    };\r\n  }, [searchInput]);\r\n\r\n  let cssMovieFound = \"div_search\";\r\n  if (moviesFound.length > 0) {\r\n    cssMovieFound += \" div_search_items_found\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes[cssMovieFound]}>\r\n        <SearchBar inputHandler={inputHandler} />\r\n      </div>\r\n      <div className={classes.div_ul}>\r\n        <ul className={classes.ul}>\r\n          {moviesFound.map((movie) => {\r\n            return (\r\n              <MovieItem\r\n                key={movie.imdbID}\r\n                addTofavorite={addToSessionfavoriteMovieHandler}\r\n                movieId={movie.imdbID}\r\n                movieName={movie.Title}\r\n                movieYear={movie.Year}\r\n                movieFullPlot={movie.Plot}\r\n                movieImage={movie.Poster}\r\n                movieReleased={movie.Released}\r\n                movieRuntime={movie.Runtime}\r\n                movieGenre={movie.Genre}\r\n                movieWriter={movie.Writer}\r\n                movieActors={movie.Actors}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MovieList;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport FavoritesMovie from \"../FavoritesMovies/FavoritesMovies\";\r\nimport MovieList from \"../MovieList/MovieList\";\r\nimport classes from \"./UserPage.module.scss\";\r\n\r\ninterface UserProps {\r\n  username: string | null;\r\n}\r\n\r\nconst UserPage: React.FC<UserProps> = ({ username }) => {\r\n  const [favoriteToggle, setFavoriteToggle] = useState(false);\r\n\r\n  const ToggleHandler = () => {\r\n    setFavoriteToggle((prevstate) => {\r\n      return !prevstate;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <header className={classes.header}>\r\n        <h1 className={classes.h1}>{username}</h1>\r\n        <div className={classes.favorites} onClick={ToggleHandler}>\r\n          Favorites Movies\r\n        </div>\r\n      </header>\r\n      {favoriteToggle ? <FavoritesMovie loggedUsername={username}/> : <MovieList />}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default UserPage;\r\n","import React, { Fragment } from \"react\";\r\nimport Button from \"../../Button/Button\";\r\nimport classes from \"./ErrorModal.module.scss\";\r\n\r\ninterface ErrorModalProps {\r\n  onButtonClick: () => void;\r\n}\r\n\r\nconst ErrorModal: React.FC<ErrorModalProps> = ({ onButtonClick }) => {\r\n  return (\r\n    <Fragment>\r\n      <header className={classes.header}>\r\n        <h2>Invalid Username</h2>\r\n      </header>\r\n      <div className={classes.content}>\r\n        <p>Please Enter Your Name (Between 6 to 15 characters).</p>\r\n      </div>\r\n      <footer className={classes.actions}>\r\n        <Button text={\"Okey\"} type={\"button\"} onClick={onButtonClick} />\r\n      </footer>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default ErrorModal;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport Input from \"./Input/InputElement\";\r\nimport classes from \"./Form.module.scss\";\r\n\r\ninterface FormProps {\r\n  formHeaderTxt?: string;\r\n  buttonType: \"submit\" | \"reset\" | \"button\";\r\n  buttonText: string;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>, name?: string) => void;\r\n}\r\n\r\nconst Form: React.FC<FormProps> = ({\r\n  buttonText,\r\n  buttonType,\r\n  onClick,\r\n  formHeaderTxt,\r\n}) => {\r\n  const [nameInput, setNameInput] = useState<string>(\"\");\r\n\r\n  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setNameInput(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes[\"div-form\"]}>\r\n      <form className={classes.form}>\r\n        {formHeaderTxt ? (\r\n          <header className={classes.header}>\r\n            <h2 className={classes.h2}>{formHeaderTxt}</h2>\r\n          </header>\r\n        ) : (\r\n          <header>\r\n            <h2>Please Fill All Input Fields</h2>\r\n          </header>\r\n        )}\r\n        <Input type=\"text\" placeholder={\"Between 6-15\"} onChange={inputHandler} Init={nameInput} />\r\n        <Button\r\n          type={buttonType}\r\n          text={buttonText}\r\n          onClick={(e) => {\r\n            onClick(e, nameInput);\r\n            setNameInput(\"\");\r\n          }}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Form;\r\n","import React, { Fragment } from \"react\";\r\nimport Form from \"../../UI/Form/Form\";\r\nimport classes from \"./LoginForm.module.scss\";\r\n\r\ninterface LoginFromProps {\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>, username: string) => void;\r\n}\r\n\r\nconst LoginForm: React.FC<LoginFromProps> = ({ onClick }) => {\r\n  return (\r\n    <Fragment>\r\n      <header className={classes.header}>\r\n        <h1 className={classes.title}>\r\n          Welcome To OMDb API Movies Search Engine\r\n        </h1>\r\n      </header>\r\n      <Form\r\n        formHeaderTxt={\"Please Enter Username:\"}\r\n        buttonText={\"Login\"}\r\n        buttonType={\"submit\"}\r\n        onClick={(e, username) => onClick(e, username!)}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default LoginForm;\r\n","import { useState, useEffect } from \"react\";\nimport UserPage from \"./Components/UserPage/UserPage\";\nimport Modal from \"./UI/Modal/Modal\";\nimport ErrorModal from \"./UI/Modal/Error/ErrorModal\";\nimport LoginForm from \"./Components/LoginForm/LoginForm\";\n\nfunction App() {\n\n  const [modelIsOpen, setModelIsOpen] = useState<Boolean>(false);\n  const [isLoggenIn, setIsLoggenIn] = useState<Boolean>(false);\n  const [activeUsername, setActiveUsername] = useState<string | null >(\"\");\n\n  function logginChecker() {\n    let user: string | null = sessionStorage.getItem(\"LoggedInUsername\")\n    if(user){\n      setActiveUsername(() => { return user } )\n      setIsLoggenIn(true);\n    }\n  }\n\n  useEffect(() => { logginChecker() }, []);\n\n  const loginHandler = ( e: React.MouseEvent<HTMLButtonElement>, username: string ) => {\n    e.preventDefault();\n    if(username.length < 6 || username.length > 16){\n      toggleModelIsOpen();\n    }\n    else {\n      sessionStorage.setItem(\"LoggedInUsername\", username );\n      setActiveUsername(username)\n      setIsLoggenIn(true);\n    }\n  };\n\n  const toggleModelIsOpen = () => {\n    setModelIsOpen((prevState) => {\n      return !prevState;\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      { modelIsOpen ? <Modal id={\"overlay\"}> <ErrorModal onButtonClick={toggleModelIsOpen}/> </Modal> : null }\n      {!isLoggenIn ? <LoginForm onClick={loginHandler}/> : <UserPage username={activeUsername}/> }\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}